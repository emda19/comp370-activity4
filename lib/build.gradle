/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'java' //creates new task jacocoTestReport, HTML report auto-generated at $buildDir/reports/jacoco/test
    id 'jacoco' //applying JaCoCo plugin
    id 'application'
}

application {
	mainClass = 'comp370.emailChecker.Main'
}

tasks.register('applicationCodeCoverageReport', JacocoReport) {
	executionData run
	sourceSets sourceSets.main
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:29.0-jre'
}

test {
	finalizedBy jacocoTestReport //report always generated after tests run
	jacoco {
		//Task extension default values
		enabled = true
		destinationFile = layout.buildDirectory.file('jacoco/${name}.exec').get().asFile
		includes = []
		excludes = []
		excludeClassLoaders = []
		includeNoLocationClasses = false
		sessionId = "<auto-generated value>"
		dumpOnExit = true
		classDumpDir = null
		output = JacocoTaskExtension.Output.FILE
		address = "localhost"
		port = 6300
		jmx = false
	}
}

jacocoTestReport {
	dependsOn test //tests required to run before report is generated
	reports {
		xml.enabled false
		csv.enabled false
		html.destination layout.buildDirectory.dir('jacocoHtml').get().asFile
	}
}

jacoco {
	toolVersion = "0.8.6"
	reportsDirectory = layout.buildDirectory.dir('$buildDir/reports/jacoco')
	applyTo run
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.5
			}
		}
		
		rule {
			enabled = false
			element = 'CLASS'
			includes = ['org.gradle.*']
			
			limit {
				counter = 'LINE'
				value = 'TOTALCOUNT'
				maximum = 0.3
			}
		}
	}
}
